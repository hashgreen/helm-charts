apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "chia-docker.fullname" . }}
  labels:
    {{- include "chia-docker.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "chia-docker.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "chia-docker.fullname" . }}
  updateStrategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "chia-docker.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chia-docker.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: CHIA_ROOT
              value: {{ default "/root/.chia/mainnet" .Values.env.chiaRoot }}
            - name: testnet
              value: {{ toString .Values.env.testnet | quote }}
            - name: service
              value: {{ default "node" .Values.env.service }}
            - name: log_level
              value: {{ default "INFO" .Values.env.log.level }}
            - name: TZ
              value: {{ default "UTC" .Values.env.TZ}}
            - name: self_hostname
              value: "0.0.0.0"
            - name: keys
              value: "persistent"
          ports:
            - name: peer
              {{- if .Values.env.testnet }}
              containerPort: 58444
              {{- else }}
              containerPort: 8444
              {{- end }}
              protocol: TCP
            - name: rpc
              containerPort: 8555
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe: {{- omit .Values.livenessProbe "enabled" | toYaml | nindent 12 }}
            exec:
              command:
                - sh
                - -c
                - >-
                  curl -X POST --fail \
                        --cert "${CHIA_ROOT}/config/ssl/full_node/private_full_node.crt" \
                        --key "${CHIA_ROOT}/config/ssl/full_node/private_full_node.key" \
                        -d '{}' -k -H "Content-Type: application/json" https://localhost:8555/healthz

                  if [[ "$?" -ne 0 ]]; then
                      logger "$(dt) Node healthcheck failed"
                      exit 1
                  fi
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe: {{- omit .Values.readinessProbe "enabled" | toYaml | nindent 12 }}
            exec:
              command:
                - sh
                - -c
                - >-
                  curl -X POST --fail \
                        --cert "${CHIA_ROOT}/config/ssl/full_node/private_full_node.crt" \
                        --key "${CHIA_ROOT}/config/ssl/full_node/private_full_node.key" \
                        -d '{}' -k -H "Content-Type: application/json" https://localhost:8555/healthz

                  if [[ "$?" -ne 0 ]]; then
                      logger "$(dt) Node healthcheck failed"
                      exit 1
                  fi
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: {{ default "/root/.chia/mainnet" .Values.env.chiaRoot }}
              name: data
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
            - mountPath: {{ print .Values.env.chiaRoot "/config" | default "/root/.chia/mainnet/config" }}
              name: config
              {{- if .Values.config.persistence.subPath }}
              subPath: {{ .Values.config.persistence.subPath }}
              {{- end }}
      volumes:
  {{- if and .Values.config.persistence.enabled .Values.config.persistence.existingClaim }}
        - name: config
          persistentVolumeClaim:
            claimName: {{ tpl .Values.config.persistence.existingClaim . }}
  {{- else if not .Values.config.persistence.enabled }}
        - name: config
          emptyDir: { }
  {{- end }}
  {{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ tpl .Values.persistence.existingClaim . }}
  {{- else if not .Values.persistence.enabled }}
        - name: data
          emptyDir: { }
  {{- else if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "chia-docker.labels" . | nindent 10 }}
        {{- if .Values.persistence.annotations }}
        annotations:
          {{- (dict "value" .Values.persistence.annotations "context" $) | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{- if .Values.persistence.selector }}
        selector: {{- (dict "value" .Values.persistence.selector "context" $) | nindent 10 }}
        {{- end -}}
    {{- if and .Values.config.persistence.enabled (not .Values.config.persistence.existingClaim) }}
    - metadata:
        name: config
        labels:
          {{- include "chia-docker.labels" . | nindent 10 }}
        {{- if .Values.config.persistence.annotations }}
        annotations:
          {{- (dict "value" .Values.config.persistence.annotations "context" $) | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          {{- range .Values.config.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        {{- if .Values.config.persistence.storageClass }}
        storageClassName: {{ .Values.config.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.config.persistence.size | quote }}
        {{- if .Values.config.persistence.selector }}
        selector: {{- (dict "value" .Values.config.persistence.selector "context" $) | nindent 10 }}
        {{- end -}}
    {{- end }}
  {{- end }}